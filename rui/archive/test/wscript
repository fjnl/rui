# -*- python -*-

def options(opt):
    pass

def configure(conf):
    conf.check_cxx(lib = 'boost_serialization', uselib_store = 'boost.serialization', mandatory = True)
    conf.check_cxx(lib = 'boost_system', uselib_store = 'boost.system', mandatory = True)
    conf.check_cxx(lib = 'boost_filesystem', uselib_store = 'boost.filesystem', mandatory = True)

tests_from_boost = """
array,A binary class_info_load class_info_save bitset complex contained_class,A cyclic_ptrs,A delete_pointer deque,A derived derived_class,A derived_class_ptr,A diamond diamond_complex exported,B helper_support list,A list_ptrs,A map,A mi multiple_ptrs,A multiple_inheritance no_rtti,B,D non_intrusive non_default_ctor non_default_ctor2 null_ptr nvp,A object primitive priority_queue,A queue,A recursion,A registered set,A simple_class,A simple_class_ptr,A split stack,A tracking unregistered unique_ptr valarray variant,A vector,A new_operator,A optional shared_ptr shared_ptr_multi_base shared_ptr_132
""".split()

def build(bld):
    boost = bld.env.derive()
    boost.append_unique('CXXFLAGS', '-DBOOST_ARCHIVE_TEST=text_archive.hpp')

    for t in tests_from_boost:
        t = t.split(',')

        bld.program(
            features = 'testt',
            target = 'test.archive.%s' % t[0],
            source = ['test_%s.cpp' % t[0]] +
            (['A.cpp'] if 'A' in t else []) +
            (['polymorphic_base.cpp'] if 'B' in t else []) +
            (['polymorphic_derived1.cpp'] if 'D' in t else []),
            use = 'boost.serialization boost.filesystem boost.system msgpack rui.archive',
            includes = '../../../include',
            install_path = False,
            env = boost
        )

    bld.program(
        features = 'testt',
        target = 'test.archive.msgpack',
        source = 'test_msgpack.cpp',
        use = 'boost.serialization boost.filesystem boost.system msgpack rui.archive',
        includes = '../../../include',
        defines = 'BOOST_TEST_MAIN',
        install_path = False,
    )
